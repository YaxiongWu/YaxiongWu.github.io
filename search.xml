<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[树莓派P3设置静态IP]]></title>
      <url>/2017/06/21/%E6%A0%91%E8%8E%93%E6%B4%BEP3%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[STM32L052的CRC8硬件实现]]></title>
      <url>/2017/06/21/STM32L052%E7%9A%84CRC8%E7%A1%AC%E4%BB%B6%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[STM32的ADC测量电压]]></title>
      <url>/2017/06/21/STM32%E7%9A%84ADC%E6%B5%8B%E9%87%8F%E7%94%B5%E5%8E%8B/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[STM32 Spi DMA]]></title>
      <url>/2017/06/21/STM32-Spi-DMA/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[STM32f103 uart dma printf串口终极方案]]></title>
      <url>/2017/06/21/STM32f103-uart-dma-printf%E4%B8%B2%E5%8F%A3%E7%BB%88%E6%9E%81%E6%96%B9%E6%A1%88/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[STM32L0 Lorawan调试问题]]></title>
      <url>/2017/06/21/STM32L0-Lorawan%E8%B0%83%E8%AF%95%E9%97%AE%E9%A2%98/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[STM32L0不能连接的问题]]></title>
      <url>/2017/06/21/STM32L0%E4%B8%8D%E8%83%BD%E8%BF%9E%E6%8E%A5%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h2 id="1-问题"><a href="#1-问题" class="headerlink" title="1. 问题"></a>1. 问题</h2><p>前期使用STM32L052+SX1276模块时，遇到了几个问题：</p>
<ol>
<li>使用买来的，已经写好代码的MODEM，直接就不认，一直纠结于硬件问题，或是启动设置的问题，其实是写好的代码中，将SW调试端口用作了IO口，只要正常运行后，就无法正常的用作SW，所以一直连不上，ST-LINK软件的提示是有意义的，它提示使用硬件RESET，这个在”STM32 ST-LINK Utility”和keil中都有地方设置，原理就是SW的IO口做别的用了，就通过RESET来复位到SW，一般是点击连接，或下载，或调试时，立即按下RESET，很快松开，可正常使用</li>
<li>FLASH的读保护问题<br>   在连接FLASH后，提示读保护，网上大部分是让从RAM运行一段FLASH解锁的代码，有些复杂，没有成功。<br>  解决办法：<br>   连接板子与PC，进入Dos命令行，进入C:\Program Files <x86>\STMicroelectronics\STM32 ST-LINK Utility\ST-LINK Utility目录下，执行ST-Link_CLI.exe -c SWD UR -OB RDP=0  这样就可以把读保护去掉了。</x86></li>
</ol>
<h2 id="2-网上有价值的信息"><a href="#2-网上有价值的信息" class="headerlink" title="2. 网上有价值的信息"></a>2. 网上有价值的信息</h2><p>很多人都碰到过调试器不能连接到STM32的问题，不管是IAR的J-Link还是Keil的ULink，或者是ST的ST-Link。出现这个问题时，调试软件会提示不能建立与Cortex-M3的连接，或提示不能下载程序，或提示找不到要调试的设备等。<br>这样的问题都是发生在调试那些可以在CPU不干预的时候自动运行的模块、或在调试低功耗模式的程序的时候。所谓“可以在CPU不干预的时候自动运行的模块”包括：DMA、定时器、连续转换模式下的ADC、看门狗等模块。</p>
<p>这个问题的根源是：</p>
<ol>
<li>调试器需要在RAM内执行一段程序，对Flash进行擦写操作，如果不停止这些自动运行的模块，它们会干扰程序在RAM中的执行，致使下载失败。比如DMA模块被配置为不停地拷贝一段数据区，而调试器刚好需要使用DMA数据传输的目标区域，这时DMA的操作将会与调试器的操作发生冲突。再比如，如果启动了看门狗而没有执行硬件复位，则在下次调试器需要下载程序时，看门狗超时将触发芯片复位，导致下载操作失败。</li>
<li>低功耗是通过停止CPU的时钟而实现，JTAG调试是通过与CPU的通信实现，停止了CPU的时钟致使调试器会失去与CPU的通信。</li>
</ol>
<p>有人说“我停止调试的时候，这些模块已经停止了运行，应该不会干扰到后续的调试”，这个问题要从几方面看：</p>
<ol>
<li>调试器是通过停止CPU核心的时钟来停止被调试程序的运行，实际上被调试芯片的硬件模块并没有被复位，它们还处于使能状态，那些能够自动运行的模块只是处于暂停状态，一旦恢复了时钟之后，它们仍会继续运行。</li>
<li>目前常用的调试软件，不管是IAR EWARM还是Keil MDK，调试软件界面上的”复位”按钮都不能对芯片执行硬件的复位，这个”复位”按钮只能对芯片内的程序执行软件复位，即把运行指针重新指向复位地址。</li>
<li>使用板上的复位按钮可以手动地进行硬件复位，使所有模块(包括那些能够自动运行的模块)停止工作并恢复到复位状态。但是当调试器需要控制CPU之前，它需要先为CPU核心提供时钟，然后需要较长的一段时间做一些初始化的动作，然后才能接管CPU核心的控制权。在调试器为CPU核心提供时钟之后，用户程序就已经开始运行起来，如果用户程序在调试器接管CPU核心的控制权之前，就初始化好硬件模块并启动运行，则仍然会产生与调试器的冲突。</li>
</ol>
<p>根据以上的分析，解决这个问题的关键是，在调试器接管CPU核心的控制权之前，必须停止所有能够自动运行模块的操作，使它们处于关闭状态，要做到这一点，可以有以下几种方案：</p>
<ol>
<li>每次退出调试状态时，先停止所有模块的运行，比如执行该模块的DeInit()操作。</li>
<li>在main()函数开始时，不管各模块处于什么状态，先执行该模块的DeInit()操作，然后在程序中较晚的时间或真正需要时再开启相应的模块。这样保证在刚进入调试状态时，调试器能够有充足的时间完成初始化和下载程序的操作。先执行该模块的DeInit()操作的目的是为了关闭哪些上一次操作开启的模块。</li>
<li>调整BOOT0/BOOT1的设置，把启动模式改变为从内部SRAM启动，再结合手工硬件复位。由于BOOT0/BOOT1的状态只在硬件复位时是有意义的，而调试器不做硬件复位，所以这样的设置不会影响调试器下载程序到Flash中，也不会影响在Flash中调试程序。</li>
</ol>
<h2 id="3-调试STM32程序时，某些标志位被调试软件意外清除的问题"><a href="#3-调试STM32程序时，某些标志位被调试软件意外清除的问题" class="headerlink" title="3. 调试STM32程序时，某些标志位被调试软件意外清除的问题"></a>3. 调试STM32程序时，某些标志位被调试软件意外清除的问题</h2><p>在调试的过程中，使用调试软件的寄存器或存储器显示窗口，可以很方便地查看外设寄存器的状态。<br>很多朋友都碰到过这样的问题：在单步调试时始终不能在显示窗口看到某些标志位的变化，应该设置这些标志位的时候，窗口中却显示为0，不少人都错误地认为这是芯片的问题。<br>我们知道，不少STM32外设的状态寄存器位，可以通过对某些寄存器的读操作而清除(例如I2C的I2C_SR1中的很多标志位)，在调试过程中，每当程序停止在设置的断点或单步停止时，调试软件都会自动地读出所有指定的寄存器和存储器中的内容，并刷新窗口的显示，调试软件的这个读操作恰好清除了那些标志位，造成了上面描述的现象。<br>有几个简单的办法解决这个问题：</p>
<ol>
<li>关闭寄存器或存储器显示窗口。 </li>
<li>在寄存器或存储器显示窗口中不显示这些敏感的寄存器。 </li>
<li>不要把断点放在对这些敏感的寄存器位操作的前面，以保证这些寄存器位不被调试软件意外地操作。 </li>
<li>看官自己添加<del>~</del></li>
</ol>
<h2 id="4-在使用STM32的外设时，由于IO口被用作复用功能，但是外设的初始化正确，GPIO口初始化正确，外设的时钟也已开启，但是外设无法正常运行"><a href="#4-在使用STM32的外设时，由于IO口被用作复用功能，但是外设的初始化正确，GPIO口初始化正确，外设的时钟也已开启，但是外设无法正常运行" class="headerlink" title="4. 在使用STM32的外设时，由于IO口被用作复用功能，但是外设的初始化正确，GPIO口初始化正确，外设的时钟也已开启，但是外设无法正常运行"></a>4. 在使用STM32的外设时，由于IO口被用作复用功能，但是外设的初始化正确，GPIO口初始化正确，外设的时钟也已开启，但是外设无法正常运行</h2><p>其中最关键的一项，大多数使用者多没有设置，就是某个IO口被用作外设的接口时，需要开启IO口的复用功能的时钟，即进行外设、IO的时钟使能时，需要如下代码：<br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOx | RCC_APB2Periph_AFIO, ENABLE);    /<em> GPIOx and AFIO clock enable </em>/<br>x — 为对应的GPIO口，如：A、B、C、D、E。<br> 在使用时，一定要注意该要点！ </p>
]]></content>
      
        <categories>
            
            <category> 硬件 </category>
            
            <category> stm32 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sw连接 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[STM32去掉flash读保护]]></title>
      <url>/2017/06/21/STM32%E5%8E%BB%E6%8E%89flash%E8%AF%BB%E4%BF%9D%E6%8A%A4/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[本博客的编辑格式说明]]></title>
      <url>/2017/06/21/%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%BC%96%E8%BE%91%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>本博客采用Hexo + hexo-themes-bubuzou来搭建，核心的格式是markdown，但Hexo也有扩展，bubuzou主题也有少部分扩展，所以要分成这三个部分来说明编辑格式。<br><a id="more"></a></p>
<h2 id="1-markdown格式"><a href="#1-markdown格式" class="headerlink" title="1. markdown格式"></a>1. markdown格式</h2><h3 id="1-1-标题"><a href="#1-1-标题" class="headerlink" title="1.1 标题"></a>1.1 标题</h3><p>只要在文字前加#就可以表示标题</p>
<pre><code># 一级标题
## 二级标题
</code></pre><p>bubuzou主题自动生成文章段落结构只支持两级标题</p>
<h3 id="1-2-列表"><a href="#1-2-列表" class="headerlink" title="1.2 列表"></a>1.2 列表</h3><p>列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格。</p>
<ol>
<li>1</li>
<li>2</li>
<li>3</li>
</ol>
<h3 id="1-3-引用"><a href="#1-3-引用" class="headerlink" title="1.3 引用"></a>1.3 引用</h3><p>只需要在文本前加入 &gt; 这种尖括号（大于号）即可。<br>效果:</p>
<blockquote>
<p>引用的样子</p>
</blockquote>
<h3 id="1-4-插入链接和图片"><a href="#1-4-插入链接和图片" class="headerlink" title="1.4 插入链接和图片"></a>1.4 插入链接和图片</h3><p>插入链接与插入图片的语法很像，区别在一个 !号</p>
<pre><code>链接格式：[链接的文字](http://地址  &quot;鼠标移上去时的气泡提示&quot;)
</code></pre><p>效果:<br><a href="http://www.sina.com.cn" title="提示：" target="_blank" rel="external">新浪</a></p>
<pre><code>图片格式：![图片](http://mouapp.com/Mou_128.png)
</code></pre><p>效果:<br><img src="http://mouapp.com/Mou_128.png" alt="图片"></p>
<p>但是这里只能引用网络上的图片，Hexo可以实现按相对地址加载图片，只需在source文件下建一个文件夹images，把图片放进去，将引用地址改成(/images/图片名称.jpg):<br>    <img src="/images/201706211652_小狗.jpg" alt="图片"></p>
<h3 id="1-5-斜体和粗体"><a href="#1-5-斜体和粗体" class="headerlink" title="1.5 斜体和粗体"></a>1.5 斜体和粗体</h3><p>用两个 <em> 包含一段文本就是粗体的语法，用一个 </em> 包含一段文本就是斜体的语法。<br>效果:</p>
<p><strong>粗体</strong>  <em>斜体</em></p>
<h3 id="1-6-表格"><a href="#1-6-表格" class="headerlink" title="1.6 表格"></a>1.6 表格</h3><p>表格的格式如下</p>
<pre><code>| Tables        | Are           | Cool  |
| ------------- |-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |
</code></pre><p>效果:</p>
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:right">Are</th>
<th style="text-align:center">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:right">right-aligned</td>
<td style="text-align:center">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:right">centered</td>
<td style="text-align:center">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:right">are neat</td>
<td style="text-align:center">$1</td>
</tr>
</tbody>
</table>
<h3 id="1-7-代码框"><a href="#1-7-代码框" class="headerlink" title="1.7 代码框"></a>1.7 代码框</h3><p>如果需要在文章里优雅的引用代码框，只需要用两个 ` 把中间的代码包裹起来，但是由于代码中存在各种符号和格式会干扰markdown格式，在hexo的格式中会有更好效果的格式。</p>
<h3 id="1-8-分割线"><a href="#1-8-分割线" class="headerlink" title="1.8 分割线"></a>1.8 分割线</h3><p>分割线的语法只需要三个 * 号，标准的markdown格式可以实现，但是这个主题下不能实现</p>
<p>关于mardown格式更加详细说明，可以参考这个网址<br><a href="http://www.appinn.com/markdown/basic.html" target="_blank" rel="external">markdown格式中文简洁版</a><br><a href="http://wowubuntu.com/markdown" target="_blank" rel="external">markdown格式详细中文版</a></p>
<h2 id="2-Hexo格式"><a href="#2-Hexo格式" class="headerlink" title="2. Hexo格式"></a>2. Hexo格式</h2><p>Hexo自己扩展了很多标签，可以通过官网说明 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="external">标签插件</a>来查看详细的说明。</p>
<h3 id="2-1-引用块"><a href="#2-1-引用块" class="headerlink" title="2.1 引用块"></a>2.1 引用块</h3><p>Hexo的引用块可以实现很多不同的需求，可以在文章中插入引言，可包含作者、来源和标题。</p>
<pre><code>{% blockquote [author[, source]] [link] [source_link_title] %}
	content
	{% endblockquote %}
</code></pre><p>比如：</p>
<pre><code>{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}
    Every interaction is both precious and an opportunity to delight.
	{% endblockquote %}
</code></pre><p>效果是这样的：<br><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote></p>
<h3 id="2-2-代码块"><a href="#2-2-代码块" class="headerlink" title="2.2 代码块"></a>2.2 代码块</h3><p>Hexo的代码块格式：</p>
<pre><code>{% codeblock [title] [lang:language] [url] [link text] %}
	code snippet
	{% endcodeblock %}
</code></pre><p>比如：</p>
<pre><code>{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}
    _.compact([0, 1, false, 2, '', 3]);
	=> [1, 2, 3]
	{% endcodeblock %}
</code></pre><p>效果：</p>
<figure class="highlight plain"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</div><div class="line">=&gt; [1, 2, 3]</div></pre></td></tr></table></figure>
<h3 id="2-3-图片"><a href="#2-3-图片" class="headerlink" title="2.3 图片"></a>2.3 图片</h3><p>在文章中插入指定大小的图片。<br>格式：</p>
<pre><code>{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}
</code></pre><p>比如：</p>
<pre><code>{% img /images/201706211652_小狗.jpg 200 200 提示 %}
</code></pre><p>效果：</p>
<img src="/images/201706211652_小狗.jpg" width="200" height="200" title="提示">
<h3 id="2-4-查看更多内容"><a href="#2-4-查看更多内容" class="headerlink" title="2.4 查看更多内容"></a>2.4 查看更多内容</h3><p>如果只显示文章的一部分，剩余的部分可以通过<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!--more--&gt;</div><div class="line"> </div></pre></td></tr></table></figure><br>来查看</p>
<h3 id="2-4-其他"><a href="#2-4-其他" class="headerlink" title="2.4 其他"></a>2.4 其他</h3><p>其他如Frame、视频、引用文章等可以通过<a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="external">标签插件</a>来查看。</p>
<h2 id="3-bubuzou主题"><a href="#3-bubuzou主题" class="headerlink" title="3. bubuzou主题"></a>3. bubuzou主题</h2><p>可以查看<a href="https://github.com/Bulandent/hexo-theme-bubuzou/blob/master/doc/doc-zh.md" target="_blank" rel="external">bubuzou主题的中文说明文档</a>来获得更多信息。</p>
<h3 id="3-1-警告块"><a href="#3-1-警告块" class="headerlink" title="3.1 警告块"></a>3.1 警告块</h3><pre><code>主题格式里主要是加了一警告块，这也是如何插入HTML格式的一个实例。
</code></pre><p>  格式如下：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;tip&quot;&gt;</div><div class="line">   ** 警告**&lt;p&gt;</div><div class="line">   	这是一个警告实例。</div><div class="line">&lt;/div&gt; </div></pre></td></tr></table></figure>
<p>效果：</p>
<div class="tip"><br>    <strong>警告</strong><p><br>        这是一个警告实例。<br></p></div>

]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 格式说明 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
